stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build-image:
  stage: build
  allow_failure: false
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - build
  image:
    name: docker.io/distrolessman/auto-ci:java11-alpine
    entrypoint: [ "" ]
  before_script:
    - export $ENV_DEPLOY
  script:
    - echo "Compiling java ..."
    - gradle bootJar
    - cd build/libs
    - java -Djarmode=layertools -jar *.jar extract
    - echo "Project was compiled"
    - echo "Building image ..."
    - mkdir -p /kaniko/.docker
    - cp $KANIKO_AUTH_CONFIG /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${ECR_REGISTRY}/${IMAGE_NAME}:$TAG"
      --use-new-run=true
      --cache=true
      --cache-repo=${CACHE_REGISTRY}/${IMAGE_NAME}/cache
      --cache-copy-layers=true
      --cache-run-layers=true
    - echo "Image was built."
    - cd ${CI_PROJECT_DIR}
    - rm -rf build/libs
  tags:
    - unicloud-rdteam-k8s-operator

deploy-dev:
  stage: deploy
  image:
    name: docker.io/distrolessman/auto-ci:java11-alpine
    entrypoint: [ "" ]
  variables:

  before_script:
    - export $ENV_DEPLOY
  script:
    - curl -o "chart_repo.tar.gz" $CHART_GIT_ARCHIVED_URL && mkdir workspace && tar xzf chart_repo.tar.gz -C workspace --strip-components 1 && cd ./workspace
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - mkdir -p $HOME/.kube && cp $KUBE_CONFIG_FILE "$HOME/.kube/config"
    - kubectl -n $NAME_SPACE apply -f secrets/$ENV/$GROUP/$NAME.yaml -f configmaps/$ENV/$GROUP/$NAME.yaml
    - helm upgrade --install --recreate-pods -n $NAME_SPACE $SERVICE_NAME $CHART_DIR -f values/$ENV/$GROUP/$NAME.yaml
  tags:
    - unicloud-rdteam-k8s-operator
